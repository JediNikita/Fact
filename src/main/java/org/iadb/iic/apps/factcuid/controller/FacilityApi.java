package org.iadb.iic.apps.factcuid.controller;

/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

import io.swagger.annotations.*;

import org.iadb.iic.apps.factcuid.model.RiskFacility;
import org.iadb.iic.apps.factcuid.model.RiskFacilityLGD;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-05T07:05:17.201Z[GMT]")
@Api(value = "facility", description = "the facility API")
public interface FacilityApi {

    @ApiOperation(value = "GetFacility", nickname = "getFacility", notes = "facility details", response = RiskFacility.class, authorizations = {
        @Authorization(value = "apiKeyHeader"),
@Authorization(value = "apiKeyQuery")    }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Facility Details", response = RiskFacility.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 404, message = "Facility Not Found") })
    @RequestMapping(value = "/facility/{facilityId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<RiskFacility> getFacility(@ApiParam(value = "FACT facility id",required=true) @PathVariable("facilityId") Integer facilityId
);


    @ApiOperation(value = "GetFacilityLGD", nickname = "getfacilityLgd", notes = "Facility LGD Details", response = RiskFacilityLGD.class, authorizations = {
        @Authorization(value = "apiKeyHeader"),
@Authorization(value = "apiKeyQuery")    }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Facility LGD", response = RiskFacilityLGD.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 404, message = "Facility Not Found") })
    @RequestMapping(value = "/facility/{facilityId}/LGD",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<RiskFacilityLGD> getfacilityLgd(@ApiParam(value = "FACT Facility id",required=true) @PathVariable("facilityId") Integer facilityId
);


    @ApiOperation(value = "PostFacility", nickname = "postFacility", notes = "Create Facility", authorizations = {
        @Authorization(value = "apiKeyHeader"),
@Authorization(value = "apiKeyQuery")    }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Facility Created"),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 409, message = "Conflict") })
    @RequestMapping(value = "/facility",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> postFacility(@ApiParam(value = "Facility details"  )  @Valid @RequestBody RiskFacility body
);

}

